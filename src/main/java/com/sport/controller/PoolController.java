package com.sport.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.sport.modal.Pool;
import com.sport.repository.PoolRepository;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/pool") // This means URL's start with /demo (after Application path)
public class PoolController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private PoolRepository poolRepository;

	//$ curl 'localhost:8080/pool/add?name=First'
		@GetMapping(path="/add") // Map ONLY GET Requests
		public @ResponseBody Pool addNewPool (@RequestParam String name, @RequestParam Integer parentId) {
			// @ResponseBody means the returned String is the response, not a view name
			// @RequestParam means it is a parameter from the GET or POST request

			Pool n = new Pool();
			n.setName(name);
			n.setParentId(parentId);
			poolRepository.save(n);
			return n;
		}
		
		@GetMapping(path="/edit") 
		public @ResponseBody Pool editPool (@RequestParam Integer id, @RequestParam String name, @RequestParam Integer parentId) {
			Pool n = new Pool();
			n.setId(id);
			n.setParentId(parentId);
			n.setName(name);
			poolRepository.save(n);
			return n;
		}
		
	@GetMapping(path="/delete") 
	public @ResponseBody Pool deletePool (@RequestParam Integer id) {
		Pool n = new Pool();
		n.setId(id);
		poolRepository.delete(n);
		return n;
	}

	@GetMapping(path="/all")
	public @ResponseBody Iterable<Pool> getAllPool() {
		// This returns a JSON or XML with the users
		return poolRepository.findAll();
	}
}